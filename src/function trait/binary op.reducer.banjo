"
   Reduce a collection to a single-element list using this function as a binary operator.
   
   If the input collection is empty, returns it as-is.  The `?:` operator can be used to
   extract the result from the list using a default when the list is empty.
" ⇒
(usage examples = [
   (x ↦ y ↦ (x + y * y)).reducer([]) == []
   (x ↦ y ↦ (x + y * y)).reducer([1]) == [1]
   (x ↦ y ↦ (x + y * y)).reducer([1, 3]) == [10]
   (x ↦ y ↦ (x + y * y)).reducer([1, 3, 5]) == [785]
   (.+).reducer [1,2,3] == [6]
   (.*).reducer [2,2,2] == [8]
]) ⇒
(collection) ↦ (collection.first ; (left ↦ (binary op(left) ∘ binary op.reducer(collection.after first)) ?: left)) || collection 
