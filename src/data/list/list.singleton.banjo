"A list of a single element" ⇒ 
(elt) ↦ list.trait @ {
  if(x) = x.singleton(elt)
  into(algebra) = algebra.element(elt)
  a.is empty = false
  a.is nonempty = true
  a.slice(start, end) = 
    if(start == 1 && end > 1) then (a) else ([])
  a.from(offset) = if(offset > 0) then ([]) else (a)
  a.to(limit) = if(limit > 0) then (a) else ([]) 
  a.first = a
  a.after first = a
  a.last = a
  a.before last = a
  a.zipped with(b) = b.first ; (elt b ↦ data.pair(elt, elt b))
  a.starts with(b) = b.is empty || a == b
  (a && result) = result
  (a || sub) = a
  (a ?: sub) = elt
  (a == b) = (|b| == 1) && (elt ∈ b)
  (a ≠ b) = (|b| ≠ 1) || ¬(elt ∈ b)
  
  a.is empty = false
  a.is nonempty = true
  (|a|) = 1
  a.length = 1
  a.size = 1
  (b ∈ a) = (b == elt)
  label = ["[", elt.label, "]"].sum("")
  
  a.at(n) = (n == 0).if { true = a, false = [] }
}
